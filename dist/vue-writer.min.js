var VueWriter=function(t){"use strict";function e(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=t&&("undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"]);if(null==r)return;var n,a,i=[],u=!0,o=!1;try{for(r=r.call(t);!(u=(n=r.next()).done)&&(i.push(n.value),!e||i.length!==e);u=!0);}catch(t){o=!0,a=t}finally{try{u||null==r.return||r.return()}finally{if(o)throw a}}return i}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var n=t.defineComponent({name:"VueWriter",props:{array:{type:Array,required:!0},typeSpeed:{type:Number,default:200},delay:{type:Number,default:2e3},intervals:{type:Number,default:500},start:{type:Number,default:0},caret:{type:String,default:"cursor"},iterations:{type:Number,default:0}},data:function(){return{typeValue:"",count:0,typeStatus:!1,arrayIndex:0,charIndex:0}},methods:{typewriter:function(){var t=0;if(this.charIndex<this.array[this.arrayIndex].length)this.typeStatus||(this.typeStatus=!0),this.typeValue+=this.array[this.arrayIndex].charAt(this.charIndex),this.charIndex+=1,setTimeout(this.typewriter,this.typeSpeed);else{if(this.count+=1,this.onTyped(this.array[this.arrayIndex]),this.count===this.array.length&&(t+=1)===this.iterations)return this.typeStatus=!1;this.typeStatus=!1}},onTyped:function(t){this.$emit("typed",t)}},created:function(){setTimeout(this.typewriter,this.start)}}),a={class:"is-typed"};n.render=function(e,r,n,i,u,o){return t.openBlock(),t.createBlock("div",a,[t.renderSlot(e.$slots,"default"),t.createVNode("span",{class:"typed",innerHTML:e.typeValue},null,8,["innerHTML"]),t.createVNode("span",{class:e.caret+" "+{typing:e.typeStatus}},"Â ",2)])};var i=function(){var t=n;return t.install=function(e){e.component("VueWriter",t)},t}(),u=Object.freeze({__proto__:null,default:i});return Object.entries(u).forEach((function(t){var r=e(t,2),n=r[0],a=r[1];"default"!==n&&(i[n]=a)})),i}(Vue);